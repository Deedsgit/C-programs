#include<stdio.h>

struct node {
	
	struct node * left;
	struct node * right;
	int data;
};
void Inorder();
void main()
{
	int a,b,c,d,e,f,g;
	printf("Enter the root value:");
	scanf("%d",&a);
	struct node *A =(struct node *)malloc(sizeof(struct node));
	struct node *B =(struct node *)malloc(sizeof(struct node));
	struct node *C =(struct node *)malloc(sizeof(struct node));
	struct node *D =(struct node *)malloc(sizeof(struct node));
	struct node *E =(struct node *)malloc(sizeof(struct node));
	struct node *F =(struct node *)malloc(sizeof(struct node));
	struct node *G =(struct node *)malloc(sizeof(struct node));
	printf("Enter value of B:");
	scanf("%d",&b);

	printf("Enter value of C:");
	scanf("%d",&c);
	
	printf("Enter value of D:");
	scanf("%d",&d);
	
	printf("Enter value of E:");
	scanf("%d",&e);

	printf("Enter value of F:");
	scanf("%d",&f);

	printf("Enter value of G:");
	scanf("%d",&g);

	A->data=a;
	B->data=b;
	C->data=c;
	D->data=d;
	E->data=e;
	F->data=f;
	G->data=g;	
	
	A->left=B;
	A->right=C;
	B->left=D;
	B->right=E;
	C->left=F;
	C->right=G;
	D->left=NULL;
	D->right=NULL;
	E->left=NULL;
	E->right=NULL;
	F->left=NULL;
	F->right=NULL;
	G->left=NULL;
	G->right=NULL;
	
	

    printf("%d<--%d-->%d\n",A->left->data,A->data,A->right->data);
	printf("%d<--%d-->%d\n",B->left->data,B->data,B->right->data);
	printf("%d<--%d-->%d\n",C->left->data,C->data,C->right->data);
	

	
	printf("\Inorder Traverse\n");
	Inorder(A);
	printf("\npreorder traverse\n");
	preorder(A);
	printf("\npostorder traverse\n");
	postorder(A);
}
void Inorder(struct node *root)
{
	if (root==NULL)
	return;
	Inorder(root->left);
	printf(" %d ",root->data);
	Inorder(root->right);
}
void preorder(struct node *root)
{
	if (root==NULL)
    	return;
	
	printf(" %d ",root->data);
	preorder(root->left);
	preorder(root->right);
}
void postorder(struct node *root)
{
	if (root==NULL)
	return;
	postorder(root->left);

	postorder(root->right);
	printf(" %d ",root->data);
}
